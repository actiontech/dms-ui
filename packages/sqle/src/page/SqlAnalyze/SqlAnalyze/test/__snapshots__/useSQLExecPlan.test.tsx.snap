// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SqlAnalyze/useSQLExecPlan render generateSQLExecPlanContent when have data 1`] = `
<Space
  className="full-width-element"
  direction="vertical"
  size={0}
>
  <React.Fragment>
    <h3
      className="header-title"
    >
      SQL语句
    </h3>
    <section
      className="basic-cont-wrapper sql-cont"
    >
      <Snippet
        showCopyIcon={true}
        sql="CREATE TABLE IF NOT EXISTS task (  id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,  title VARCHAR(255) NOT NULL DEFAULT '',  description TEXT,  status ENUM('pending', 'completed') NOT NULL DEFAULT 'pending',  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);"
      />
    </section>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      执行计划
    </h3>
    <EmptyBox
      defaultNode={
        <BasicResult
          status="error"
        />
      }
      if={true}
    >
      <BasicTable
        columns={[]}
        dataSource={[]}
        pagination={false}
      />
    </EmptyBox>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      性能统计
    </h3>
    <section
      className="basic-cont-wrapper"
    >
      <EmptyBox
        defaultNode={
          <BasicResult
            status="error"
            title="Error: undefined"
          />
        }
        if={true}
      >
        <div
          className="line-wrapper"
        >
          <div
            className="line-left"
          >
            <IconSqlLine
              className="icon-line"
            />
            <div
              className="line-desc"
            >
              <h3>
                影响行数
              </h3>
              <p
                className="line-text"
              >
                区别于执行计划的rows列，显示SQL的实际影响行数
              </p>
            </div>
          </div>
          <div
            className="number-cont"
          >
            --
          </div>
        </div>
      </EmptyBox>
    </section>
  </React.Fragment>
</Space>
`;

exports[`SqlAnalyze/useSQLExecPlan render generateSQLExecPlanContent when have data 2`] = `
<Space
  className="full-width-element"
  direction="vertical"
  size={0}
>
  <React.Fragment>
    <h3
      className="header-title"
    >
      SQL语句
    </h3>
    <section
      className="basic-cont-wrapper sql-cont"
    >
      <Snippet
        showCopyIcon={true}
        sql=""
      />
    </section>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      执行计划
    </h3>
    <EmptyBox
      defaultNode={
        <BasicResult
          status="error"
        />
      }
      if={true}
    >
      <BasicTable
        columns={
          [
            {
              "dataIndex": "id",
              "render": [Function],
              "title": "id",
            },
            {
              "dataIndex": "select_type",
              "render": [Function],
              "title": "select_type",
            },
            {
              "dataIndex": "table",
              "render": [Function],
              "title": "table",
            },
            {
              "dataIndex": "partitions",
              "render": [Function],
              "title": "partitions",
            },
            {
              "dataIndex": "type",
              "render": [Function],
              "title": "type",
            },
            {
              "dataIndex": "possible_keys",
              "render": [Function],
              "title": "possible_keys",
            },
            {
              "dataIndex": "key",
              "render": [Function],
              "title": "key",
            },
            {
              "dataIndex": "key_len",
              "render": [Function],
              "title": "key_len",
            },
            {
              "dataIndex": "ref",
              "render": [Function],
              "title": "ref",
            },
            {
              "dataIndex": "rows",
              "render": [Function],
              "title": "rows",
            },
            {
              "dataIndex": "filtered",
              "render": [Function],
              "title": "filtered",
            },
            {
              "dataIndex": "Extra",
              "render": [Function],
              "title": "Extra",
            },
          ]
        }
        dataSource={
          [
            {
              "Extra": "",
              "filtered": "100.00",
              "id": "1",
              "key": "",
              "key_len": "",
              "partitions": "",
              "possible_keys": "",
              "ref": "",
              "rows": "1",
              "select_type": "SIMPLE",
              "table": "users",
              "type": "ALL",
            },
          ]
        }
        pagination={false}
      />
    </EmptyBox>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      性能统计
    </h3>
    <section
      className="basic-cont-wrapper"
    >
      <EmptyBox
        defaultNode={
          <BasicResult
            status="error"
            title="Error: undefined"
          />
        }
        if={true}
      >
        <div
          className="line-wrapper"
        >
          <div
            className="line-left"
          >
            <IconSqlLine
              className="icon-line"
            />
            <div
              className="line-desc"
            >
              <h3>
                影响行数
              </h3>
              <p
                className="line-text"
              >
                区别于执行计划的rows列，显示SQL的实际影响行数
              </p>
            </div>
          </div>
          <div
            className="number-cont"
          >
            --
          </div>
        </div>
      </EmptyBox>
    </section>
  </React.Fragment>
</Space>
`;

exports[`SqlAnalyze/useSQLExecPlan render generateSQLExecPlanContent when have data 3`] = `
<Space
  className="full-width-element"
  direction="vertical"
  size={0}
>
  <React.Fragment>
    <h3
      className="header-title"
    >
      SQL语句
    </h3>
    <section
      className="basic-cont-wrapper sql-cont"
    >
      <Snippet
        showCopyIcon={true}
        sql=""
      />
    </section>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      执行计划
    </h3>
    <EmptyBox
      defaultNode={
        <BasicResult
          status="error"
        />
      }
      if={true}
    >
      <BasicTable
        columns={[]}
        dataSource={[]}
        pagination={false}
      />
    </EmptyBox>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      性能统计
    </h3>
    <section
      className="basic-cont-wrapper"
    >
      <EmptyBox
        defaultNode={
          <BasicResult
            status="error"
            title="Error: affect_rows error"
          />
        }
        if={false}
      >
        <div
          className="line-wrapper"
        >
          <div
            className="line-left"
          >
            <IconSqlLine
              className="icon-line"
            />
            <div
              className="line-desc"
            >
              <h3>
                影响行数
              </h3>
              <p
                className="line-text"
              >
                区别于执行计划的rows列，显示SQL的实际影响行数
              </p>
            </div>
          </div>
          <div
            className="number-cont"
          >
            --
          </div>
        </div>
      </EmptyBox>
    </section>
  </React.Fragment>
</Space>
`;

exports[`SqlAnalyze/useSQLExecPlan render generateSQLExecPlanContent when have data 4`] = `
<Space
  className="full-width-element"
  direction="vertical"
  size={0}
>
  <React.Fragment>
    <h3
      className="header-title"
    >
      SQL语句
    </h3>
    <section
      className="basic-cont-wrapper sql-cont"
    >
      <Snippet
        showCopyIcon={true}
        sql=""
      />
    </section>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      执行计划
    </h3>
    <EmptyBox
      defaultNode={
        <BasicResult
          status="error"
        />
      }
      if={true}
    >
      <BasicTable
        columns={[]}
        dataSource={[]}
        pagination={false}
      />
    </EmptyBox>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      性能统计
    </h3>
    <section
      className="basic-cont-wrapper"
    >
      <EmptyBox
        defaultNode={
          <BasicResult
            status="error"
            title="Error: "
          />
        }
        if={true}
      >
        <div
          className="line-wrapper"
        >
          <div
            className="line-left"
          >
            <IconSqlLine
              className="icon-line"
            />
            <div
              className="line-desc"
            >
              <h3>
                影响行数
              </h3>
              <p
                className="line-text"
              >
                区别于执行计划的rows列，显示SQL的实际影响行数
              </p>
            </div>
          </div>
          <div
            className="number-cont"
          >
            10
          </div>
        </div>
      </EmptyBox>
    </section>
  </React.Fragment>
</Space>
`;

exports[`SqlAnalyze/useSQLExecPlan render generateSQLExecPlanContent when have err_message 1`] = `
<Space
  className="full-width-element"
  direction="vertical"
  size={0}
>
  <React.Fragment>
    <h3
      className="header-title"
    >
      SQL语句
    </h3>
    <section
      className="basic-cont-wrapper sql-cont"
    >
      <Snippet
        showCopyIcon={true}
        sql=""
      />
    </section>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      执行计划
    </h3>
    <EmptyBox
      defaultNode={
        <BasicResult
          status="error"
        />
      }
      if={true}
    >
      <BasicTable
        columns={[]}
        dataSource={[]}
        pagination={false}
      />
    </EmptyBox>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      性能统计
    </h3>
    <section
      className="basic-cont-wrapper"
    >
      <EmptyBox
        defaultNode={
          <BasicResult
            status="error"
            title="Error: undefined"
          />
        }
        if={true}
      >
        <div
          className="line-wrapper"
        >
          <div
            className="line-left"
          >
            <IconSqlLine
              className="icon-line"
            />
            <div
              className="line-desc"
            >
              <h3>
                影响行数
              </h3>
              <p
                className="line-text"
              >
                区别于执行计划的rows列，显示SQL的实际影响行数
              </p>
            </div>
          </div>
          <div
            className="number-cont"
          >
            --
          </div>
        </div>
      </EmptyBox>
    </section>
  </React.Fragment>
</Space>
`;

exports[`SqlAnalyze/useSQLExecPlan render generateSQLExecPlanContent when have err_message 2`] = `
<Space
  className="full-width-element"
  direction="vertical"
  size={0}
>
  <React.Fragment>
    <h3
      className="header-title"
    >
      SQL语句
    </h3>
    <section
      className="basic-cont-wrapper sql-cont"
    >
      <Snippet
        showCopyIcon={true}
        sql=""
      />
    </section>
  </React.Fragment>
  <React.Fragment>
    <h3
      className="header-title"
    >
      执行计划
    </h3>
    <EmptyBox
      defaultNode={
        <BasicResult
          status="error"
          title="sql_explain err_message"
        />
      }
      if={false}
    >
      <BasicTable
        columns={[]}
        dataSource={[]}
        pagination={false}
      />
    </EmptyBox>
  </React.Fragment>
</Space>
`;
